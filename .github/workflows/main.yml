# This is a workflow for building the kasa_cli executable on all three major platforms.

name: Build-Windows 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab 
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
    runs-on: windows-latest

    steps:
      # Check-out repository
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified 
          cache: 'pip'
          cache-dependency-path: Client/requirements.txt

      # Install dependencies
      - name: Install Dependencies
        run: |
          pip install -r Client/requirements.txt --ignore-requires-python

      # Build python script into a stand-alone exe
      - uses: Nuitka/Nuitka-Action@v1.3
        with:
          working-directory: ./Client
          script-name: ./Mini-KVM.py
          mode: app
          enable-plugins: pyside6
          windows-console-mode: disable
          windows-icon-from-ico: ./icons/icon.ico
          include-data-dir: ./icons=icons,./web=web,./web_s=web_s,./Data=data
          include-data-files: trans_cn.qm=trans_cn.qm,qtbase_cn.qm=qtbase_cn.qm
          include-qt-plugins: multimedia

      # Uploads artifacts
      - name: "Upload Artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            Client/build/*.exe
            Client/build/*.bin
            Client/build/*.app/**/*
